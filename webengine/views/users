<style>
  .profile-image-container {
    width: 300px;
    height: 300px;
    border-radius: 50%;
    border: 5px solid #9a6ef3;
    overflow: hidden;
    margin: 0 auto 2rem;
    flex-shrink: 0;
  }
  .profile-image,
  .profile-image-placeholder {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }
  @media (max-width: 576px) {
    .profile-image-container {
      width: 200px;
      height: 200px;
    }
  }
  
  /* User actions horizontal scrolling */
  #user-actions {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  @media (max-width: 767.98px) {
    #user-actions {
      overflow-x: auto;
      white-space: nowrap;
      -webkit-overflow-scrolling: touch;
      scrollbar-width: none; /* Firefox */
      padding-bottom: 0.5rem;
      justify-content: flex-start !important;
      width: 100%;
    }
    
    #user-actions::-webkit-scrollbar {
      display: none; /* Chrome, Safari, Opera */
    }
    
    #user-actions > .btn,
    #user-actions > a.btn {
      flex-shrink: 0;
    }
  }
  
  .about-me {
    color: #333;
    font-size: 1.2rem;
    line-height: 1.6;
  }
  .about-me * {
    width: 100%;
    color: #666;
  }

  .card {
    border: 1px solid #e1e4ea;
    padding: 24px;
    border-radius: 16px;
    opacity: 1;
  }
  .npo-logo {
    width: 90px;
    height: 90px;
    object-fit: cover;
    border-radius: 10px;
    border: 1px solid #e1e4ea;
  }
  .cause-subtitle,
  .cause-subtitle * {
    max-width: 50ch;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    /* color: #525866; */
    &:first-letter {
      text-transform: uppercase;
    }
  }
  .cause-description,
  .cause-description * {
    font-size: 18px;
    color: #525866;
  }
  .nav-tabs {
    border-bottom: 1px solid transparent;
  }
  .nav-tabs .nav-link {
    color: #525866;
    background-color: white;
    border: none;
    border-bottom: 2px solid transparent;
    font-size: 14px;
    height: 48px;
  }

  .nav-tabs .nav-link.active {
    color: black;
    background-color: white;
    border-bottom: 2px solid #7b3fee;
  }
  .card-btn {
    height: 36px;
  }

  /* Skeleton Loading Animation */
  .skeleton {
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
    border-radius: 4px;
  }

  @keyframes loading {
    0% {
      background-position: 200% 0;
    }
    100% {
      background-position: -200% 0;
    }
  }

  .skeleton-image {
    height: 100px;
    border-radius: 10px;
  }

  .skeleton-avatar {
    width: 24px;
    height: 24px;
    border-radius: 3px;
    flex-shrink: 0;
  }

  .skeleton-text {
    height: 1rem;
    border-radius: 4px;
  }

  .skeleton-text-sm {
    width: 60%;
    height: 0.875rem;
  }

  .skeleton-text-md {
    width: 80%;
  }

  .skeleton-text-lg {
    width: 100%;
    height: 1.125rem;
  }

  .skeleton-badge {
    width: 80px;
    height: 24px;
    border-radius: 14px;
  }

  .skeleton-button {
    height: 36px;
    border-radius: 4px;
    width: 100%;
  }

  #stories-loading-skeleton {
    animation: fadeIn 0.3s ease-in-out;
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  /* Skeleton to story transition */
  .skeleton-placeholder {
    transition: all 0.3s ease-in-out;
  }

  .story-card-rendered {
    opacity: 0;
    animation: slideInStory 0.4s ease-out forwards;
  }

  @keyframes slideInStory {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Mobile Stories Carousel */
  @media (max-width: 767.98px) {
    #storiesCarousel {
      margin: 0 -1rem;
    }
    
    #storiesCarousel .carousel-item {
      padding: 0 1rem;
      transition: transform 0.8s ease-in-out; /* Slower transition */
    }
    
    #storiesCarousel .carousel-inner {
      transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1); /* Smooth easing */
    }
    
    #storiesCarousel .card {
      border: 1px solid #e1e4ea;
      border-radius: 16px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      transition: transform 0.3s ease;
    }
    
    #storiesCarousel .story-card:hover {
      transform: none; /* Disable hover effects on mobile */
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    
    .carousel-control-prev,
    .carousel-control-next {
      width: 5%;
      color: #7b3fee;
    }
    
    .carousel-control-prev-icon,
    .carousel-control-next-icon {
      background-color: rgba(123, 63, 238, 0.1);
      border-radius: 50%;
      width: 2rem;
      height: 2rem;
    }
    
    /* Touch-friendly carousel indicators */
    .carousel-indicators {
      bottom: -2rem;
    }
    
    .carousel-indicators [data-bs-target] {
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background-color: #dee2e6;
      border: 0;
    }
    
    .carousel-indicators .active {
      background-color: #7b3fee;
    }
  }
  
  /* Global carousel transition override for smoother scrolling */
  #storiesCarousel .carousel-item-next,
  #storiesCarousel .carousel-item-prev,
  #storiesCarousel .carousel-item.active {
    transition: transform 0.8s ease-in-out;
  }
</style>

<style>
  .cause-card {
    position: relative;
    height: 200px;
    border-radius: 10px;
    overflow: hidden;
  }
  .cause-card img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .cause-card .overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.5);
    color: white;
    padding: 10px;
  }
  .carousel-control-prev,
  .carousel-control-next {
    width: 5%;
  }
</style>

<style>
  .category-card {
    background-size: cover;
    background-position: center;
    min-height: 160px;
    border-radius: 15px;
    border: none;
    transition: transform 0.5s ease;
    position: relative;
    overflow: hidden;
  }

  .category-card:hover {
    transform: scale(1.02);
  }

  .gradient-overlay {
    background: linear-gradient(
      179.63deg,
      rgba(113, 61, 221, 0) 0.32%,
      #3d2177 99.68%
    );
    border-radius: 15px;
  }

  /* Desktop Causes Carousel */
  #causesCarouselDesktop .carousel-item {
    transition: transform 0.8s ease-in-out;
  }
  
  #causesCarouselDesktop .carousel-inner {
    transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);
  }
  
  #causesCarouselDesktop .carousel-control-prev,
  #causesCarouselDesktop .carousel-control-next {
    width: 5%;
    color: #7b3fee;
  }
  
  #causesCarouselDesktop .carousel-control-prev-icon,
  #causesCarouselDesktop .carousel-control-next-icon {
    background-color: rgba(123, 63, 238, 0.1);
    border-radius: 50%;
    width: 2.5rem;
    height: 2.5rem;
  }

  /* Mobile Causes Carousel Optimization */
  @media (max-width: 767.98px) {
    #causesCarousel {
      margin: 0 -1rem;
    }
    
    #causesCarousel .carousel-item {
      padding: 0 1rem;
      transition: transform 0.8s ease-in-out;
    }
    
    #causesCarousel .carousel-inner {
      transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);
    }
    
    #causesCarousel .category-card {
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      transition: transform 0.3s ease;
    }
    
    #causesCarousel .category-card:hover {
      transform: none; /* Disable hover effects on mobile */
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    
    #causesCarousel .carousel-control-prev,
    #causesCarousel .carousel-control-next {
      width: 5%;
      color: #7b3fee;
    }
    
    #causesCarousel .carousel-control-prev-icon,
    #causesCarousel .carousel-control-next-icon {
      background-color: rgba(123, 63, 238, 0.1);
      border-radius: 50%;
      width: 2rem;
      height: 2rem;
    }
    
    /* Touch-friendly carousel indicators */
    #causes-indicators {
      bottom: -2rem;
    }
    
    #causes-indicators button {
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background-color: #dee2e6;
      border: 0;
      margin: 0 3px;
    }
    
    #causes-indicators .active {
      background-color: #7b3fee;
    }
  }
  
  /* Global causes carousel transition override */
  #causesCarousel .carousel-item-next,
  #causesCarousel .carousel-item-prev,
  #causesCarousel .carousel-item.active,
  #causesCarouselDesktop .carousel-item-next,
  #causesCarouselDesktop .carousel-item-prev,
  #causesCarouselDesktop .carousel-item.active {
    transition: transform 0.8s ease-in-out;
  }

  /* Desktop NPOs Carousel */
  #nposCarouselDesktop .carousel-item {
    transition: transform 0.8s ease-in-out;
  }
  
  #nposCarouselDesktop .carousel-inner {
    transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);
  }
  
  #nposCarouselDesktop .carousel-control-prev,
  #nposCarouselDesktop .carousel-control-next {
    width: 5%;
    color: #7b3fee;
  }
  
  #nposCarouselDesktop .carousel-control-prev-icon,
  #nposCarouselDesktop .carousel-control-next-icon {
    background-color: rgba(123, 63, 238, 0.1);
    border-radius: 50%;
    width: 2.5rem;
    height: 2.5rem;
  }

  /* Mobile NPOs Carousel Optimization */
  @media (max-width: 767.98px) {
    #nposCarousel {
      margin: 0 -1rem;
    }
    
    #nposCarousel .carousel-item {
      padding: 0 1rem;
      transition: transform 0.8s ease-in-out;
    }
    
    #nposCarousel .carousel-inner {
      transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);
    }
    
    #nposCarousel .npo-card {
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      transition: transform 0.3s ease;
    }
    
    #nposCarousel .npo-card:hover {
      transform: none; /* Disable hover effects on mobile */
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    
    #nposCarousel .carousel-control-prev,
    #nposCarousel .carousel-control-next {
      width: 5%;
      color: #7b3fee;
    }
    
    #nposCarousel .carousel-control-prev-icon,
    #nposCarousel .carousel-control-next-icon {
      background-color: rgba(123, 63, 238, 0.1);
      border-radius: 50%;
      width: 2rem;
      height: 2rem;
    }
    
    /* Touch-friendly carousel indicators */
    #npos-indicators {
      bottom: -2rem;
    }
    
    #npos-indicators button {
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background-color: #dee2e6;
      border: 0;
      margin: 0 3px;
    }
    
    #npos-indicators .active {
      background-color: #7b3fee;
    }
  }
  
  /* Global NPOs carousel transition override */
  #nposCarousel .carousel-item-next,
  #nposCarousel .carousel-item-prev,
  #nposCarousel .carousel-item.active,
  #nposCarouselDesktop .carousel-item-next,
  #nposCarouselDesktop .carousel-item-prev,
  #nposCarouselDesktop .carousel-item.active {
    transition: transform 0.8s ease-in-out;
  }
</style>

<style>
  .story-image {
    height: 100%;
    max-height: 100px;
    object-fit: cover;
    border-radius: 10px;
    background-color: #000000;
  }
  .story-title {
    font-size: 16px;
    font-weight: 500;
    color: #0e121b;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .story-subtitle {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    max-height: 2.8em; /* Adjust this value based on your line-height */
    line-height: 1.4em; /* Adjust this value as needed */
  }
  .story-subtitle,
  .npo-name {
    font-size: 14px;
    font-weight: 400;
    color: #0e121b;
  }
  .story-cause {
    padding: 0 10px;
    /* height: 28px; */
    border-radius: 14px;
    background-color: #eceff3;
    text-transform: uppercase;
    font-size: 12px;
    /* font-weight: bold; */
  }
  .story-date {
    font-size: 12px;
  }
  .story-npo-logo {
    width: 24px;
    height: 24px;
    border: 1px solid #aeaeae;
    border-radius: 3px;
    object-fit: cover;
    object-position: center;
  }
  .story-btn {
    font-size: 12px;
    font-weight: 500;
    color: #0e121b;
  }
  .story-card {
    transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  }
  .story-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }
  .story-btn {
    transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;
  }
  .story-card:hover .story-btn {
    background-color: #7b3fee;
    color: white;
  }
  .card-btn {
    height: 36px;
  }
  .npo-name {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
</style>

<style>
  .npo-image {
    height: 100%;
    max-height: 100px;
    object-fit: cover;
    border-radius: 10px;
  }
  .npo-title {
    font-size: 16px;
    font-weight: 500;
    color: #0e121b;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .npo-subtitle p,
  .npo-subtitle {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    max-height: 2.8em; /* Adjust this value based on your line-height */
    line-height: 1.4em; /* Adjust this value as needed */
  }
  .npo-subtitle,
  .npo-name {
    font-size: 14px;
    font-weight: 400;
    color: #0e121b;
  }
  .npo-cause {
    padding: 0 10px;
    /* height: 28px; */
    border-radius: 14px;
    background-color: #eceff3;
    text-transform: uppercase;
    font-size: 12px;
    /* font-weight: bold; */
  }
  .npo-date {
    font-size: 12px;
  }
  .npo-npo-logo {
    width: 24px; 
    height: 24px;
    border: 1px solid #aeaeae;
    border-radius: 3px;
    object-fit: contain;
    object-position: center; 
    background-color: white;
  }
  .npo-btn {
    transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;
  }
  .npo-card:hover .npo-btn {
    background-color: #7b3fee;
    color: white;
  }
  .card-btn {
    height: 36px;
  }
  .hero-img {
    width: 100%;
    height: 100%;
    max-height: 250px;
    object-fit: cover;
    border-radius: 8px;
  }

  /* Hashtag styles */
  .hashtag-item {
    color: #7b3fee;
    text-decoration: none;
    font-size: 0.85rem;
    margin-right: 8px;
    cursor: pointer;
  }
  
  .hashtag-item:hover {
    text-decoration: underline;
    color: #5a2bb8;
  }

  .hashtags-container {
    margin-top: 8px;
    line-height: 1.4;
  }
</style>

{{ $heroImage =  }}
{{ if {this.background_image.getImage()} }}
{{ $heroImage = {this.background_image.getImage()} }}
{{ else }}
{{ $heroImage = https://4xxglxlj.media.zestyio.com/npo_placeholder.png }}
{{ /if }}

<section class="container my-4">
  <div class="card pb-0">
    <img class="hero-img mb-4" src="{{ $heroImage }}" alt="" />
    <div class="row">
      <div class="col-12 col-md-5 col-lg-6">
        <div class="d-flex gap-3">
          <div class="flex-shrink-0">
            {{ if {this.profile_image} }}
            <img
              src="{{ this.profile_image.getImage() }}"
              class="img-fluid npo-logo"
              alt="{{ this.first_name }}"
            />
            {{ else }}
            <img
              src="https://www.gravatar.com/avatar/?d=mp"
              class="img-fluid npo-logo"
              alt="{{ this.first_name }}"
            />
            {{ end-if }}
          </div>
          <div class="flex-grow-1">
            <div class="d-flex flex-column justify-content-around h-100">
              <h3 class="card-title mb-0">
                {{ this.first_name }} {{ this.last_name }}
              </h3>
              {{ if {this.user_type} }}
              <div class="card-text cause-subtitle text-muted fs-5">
                {{ this.user_type }}
              </div>
              {{ end-if }}
              <div class="d-flex gap-2 d-none">
                <p class="card-text text-muted">
                  <strong>150</strong> Followers
                </p>
                <p class="card-text text-muted">
                  <strong>80</strong> Following
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-12 col-md-7 col-lg-6 pt-4 pt-md-0">
        <div id="user-actions" class="d-flex align-items-end justify-content-end h-100 gap-2" style="overflow-x: auto; white-space: nowrap; -webkit-overflow-scrolling: touch;">
          <button class="btn btn-secondary" data-bs-toggle="modal"
          data-bs-target="#shareModal">
            <i class="bi bi-share"></i> Share Profile
          </button>
          <button class="btn btn-outline-primary d-none">
            <i class="bi bi-plus"></i> Follow
          </button>
          <button class="btn btn-primary d-none">
            <i class="bi bi-currency-dollar"></i> Donate Now
          </button>
          <button id="followUserButton" class="btn btn-outline-primary d-none">
            <span class="button-content">
              <i class="bi bi-plus follow-icon"></i>
              <span class="follow-text">Follow</span>
            </span>
            <span class="loading-spinner d-none">
              <span
                class="spinner-border spinner-border-sm"
                role="status"
                aria-hidden="true"
              ></span>
              <span class="loading-text ms-1">Loading...</span>
            </span>
          </button>
        </div>
      </div>
    </div>
    <div class="table-group-divider border-light-subtle mt-4"></div>
    <div class="flex gap-2">
      <ul class="nav nav-tabs" id="npoTabs" role="tablist">
        {{ if {this.about_me} }}
        <li class="nav-item" role="presentation">
          <button
            class="nav-link active"
            id="about-tab"
            type="button"
            role="tab"
            aria-selected="true"
          >
            About
          </button>
        </li>
        {{ end-if }}
        <li class="nav-item" role="presentation">
          <button
            class="nav-link"
            id="stories-tab"
            data-bs-toggle="tab"
            data-bs-target="#stories"
            type="button"
            role="tab"
            aria-controls="stories"
            aria-selected="false"
          >
            Stories
          </button>
        </li>
        {{ if {this.favorite_npos} }}
        <li class="nav-item" role="presentation">
          <button
            class="nav-link"
            id="nonprofits-tab"
            data-bs-toggle="tab"
            data-bs-target="#nonprofits"
            type="button"
            role="tab"
            aria-controls="nonprofits"
            aria-selected="false"
          >
            Nonprofits
          </button>
        </li>
        {{ end-if }}
        {{ if {this.favorite_causes} }}
        <li class="nav-item" role="presentation">
          <button
            class="nav-link"
            id="causes-tab"
            data-bs-toggle="tab"
            data-bs-target="#causes"
            type="button"
            role="tab"
            aria-controls="causes"
            aria-selected="false"
          >
            Causes
          </button>
        </li>
        {{ end-if }}
      </ul>
    </div>
  </div>
</section>

<section class="container my-4">
  <div class="row">
    <!--Main Content-->
    <div class="col">
      <div class="d-flex flex-column gap-4">
        {{ if {this.about_me} }}
        <div id="about-section" class="d-flex flex-column gap-2">
          <h4 class="fs-5">About {{ this.first_name }}</h4>
          <div class="cause-description">{{ this.about_me }}</div>
        </div>
        {{ end-if }}
        <div id="stories-section" class="d-flex flex-column gap-2">
          <h4 class="fs-5">Stories</h4>
          
          <!-- Desktop Grid Layout -->
          <div class="d-none d-md-block">
            <div class="row gy-4" id="stories-row">
              
            </div>
            <!-- Stories Loading Skeleton - Desktop -->
            <div id="stories-loading-skeleton" class="row gy-4">
              <div class="col-12 col-sm-6 col-md-4 skeleton-placeholder" data-skeleton-index="0">
                <div class="card d-flex flex-column h-100 p-3 gap-2">
                  <div class="skeleton skeleton-image"></div>
                  <div class="d-flex flex-column gap-2 h-100">
                    <div class="d-flex align-items-end gap-2">
                      <div class="skeleton skeleton-avatar"></div>
                      <div class="skeleton skeleton-text skeleton-text-sm"></div>
                    </div>
                    <div class="flex-grow-1">
                      <div class="skeleton skeleton-text skeleton-text-lg mb-2"></div>
                      <div class="skeleton skeleton-text skeleton-text-md mb-1"></div>
                      <div class="skeleton skeleton-text skeleton-text-md"></div>
                    </div>
                    <div class="d-flex align-items-center justify-content-start flex-wrap mb-2">
                      <div class="skeleton skeleton-badge"></div>
                    </div>
                    <div class="skeleton skeleton-button"></div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Mobile Carousel Layout -->
          <div class="d-block d-md-none">
            <!-- Stories Loading Skeleton - Mobile Carousel -->
            <div id="stories-loading-skeleton-mobile">
              <div class="carousel slide">
                <div class="carousel-inner">
                  <div class="carousel-item active">
                    <div class="px-3">
                      <div class="card d-flex flex-column h-100 p-3 gap-2 skeleton-placeholder-mobile" data-skeleton-index="0">
                        <div class="skeleton skeleton-image"></div>
                        <div class="d-flex flex-column gap-2 h-100">
                          <div class="d-flex align-items-end gap-2">
                            <div class="skeleton skeleton-avatar"></div>
                            <div class="skeleton skeleton-text skeleton-text-sm"></div>
                          </div>
                          <div class="flex-grow-1">
                            <div class="skeleton skeleton-text skeleton-text-lg mb-2"></div>
                            <div class="skeleton skeleton-text skeleton-text-md mb-1"></div>
                            <div class="skeleton skeleton-text skeleton-text-md"></div>
                          </div>
                          <div class="d-flex align-items-center justify-content-start flex-wrap mb-2">
                            <div class="skeleton skeleton-badge"></div>
                          </div>
                          <div class="skeleton skeleton-button"></div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            <!-- Mobile Stories Carousel -->
            <div id="storiesCarousel" class="carousel slide d-none" data-bs-ride="false" data-bs-interval="false" data-bs-wrap="true" data-bs-touch="true" data-bs-keyboard="true">
              <div class="carousel-inner" id="stories-carousel-row">
                
              </div>
              <button class="carousel-control-prev d-none" type="button" data-bs-target="#storiesCarousel" data-bs-slide="prev" id="stories-carousel-prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
              </button>
              <button class="carousel-control-next d-none" type="button" data-bs-target="#storiesCarousel" data-bs-slide="next" id="stories-carousel-next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
              </button>
            </div>
          </div>

          <!-- No Stories Message -->
          <div id="no-stories-message" class="d-none">
            <div class="card text-center py-5">
              <div class="card-body">
                <i class="bi bi-journal-text text-muted" style="font-size: 3rem;"></i>
                <h5 class="card-title text-muted mt-3">No Stories Available</h5>
                <p class="card-text text-muted">{{ this.first_name }} hasn't shared any stories yet.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="my-4" id="causes-container" style="display: none;">
          <h2 class="mb-4 fw-semibold fs-5">Causes I Support</h2>
          
          <!-- Causes Loading Skeleton -->
          <div id="causes-loading-skeleton">
            <div class="d-none d-md-block">
              <div class="row gy-3">
                <div class="col-md-4 mb-3">
                  <div class="skeleton" style="height: 160px; border-radius: 15px;"></div>
                </div>
                <div class="col-md-4 mb-3">
                  <div class="skeleton" style="height: 160px; border-radius: 15px;"></div>
                </div>
                <div class="col-md-4 mb-3">
                  <div class="skeleton" style="height: 160px; border-radius: 15px;"></div>
                </div>
              </div>
            </div>
            <div class="d-block d-md-none">
              <div class="carousel slide">
                <div class="carousel-inner">
                  <div class="carousel-item active">
                    <div class="px-2">
                      <div class="skeleton" style="height: 160px; border-radius: 15px;"></div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Desktop Carousel Layout -->
          <div class="d-none d-md-block" id="causes-desktop">
            <div id="causesCarouselDesktop" class="carousel slide" data-bs-ride="false" data-bs-interval="false" data-bs-wrap="true" data-bs-touch="true">
              <div class="carousel-inner" id="causes-grid">
                <!-- Causes will be rendered here -->
              </div>
              <button class="carousel-control-prev d-none" type="button" data-bs-target="#causesCarouselDesktop" data-bs-slide="prev" id="causes-desktop-carousel-prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
              </button>
              <button class="carousel-control-next d-none" type="button" data-bs-target="#causesCarouselDesktop" data-bs-slide="next" id="causes-desktop-carousel-next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
              </button>
            </div>
          </div>

          <!-- Mobile Carousel Layout -->
          <div class="d-block d-md-none" id="causes-mobile">
            <div id="causesCarousel" class="carousel slide" data-bs-ride="false" data-bs-interval="false" data-bs-wrap="true" data-bs-touch="true">
              <div class="carousel-inner" id="causes-carousel-inner">
                <!-- Causes will be rendered here -->
              </div>
              <button class="carousel-control-prev d-none" type="button" data-bs-target="#causesCarousel" data-bs-slide="prev" id="causes-carousel-prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
              </button>
              <button class="carousel-control-next d-none" type="button" data-bs-target="#causesCarousel" data-bs-slide="next" id="causes-carousel-next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
              </button>
              <div class="carousel-indicators d-none" id="causes-indicators">
                <!-- Indicators will be generated -->
              </div>
            </div>
          </div>
        </div>
        <div class="my-4" id="npos-container" style="display: none;">
          <h2 class="mb-4 fw-semibold fs-5">Nonprofits</h2>
          
          <!-- NPO Loading Skeleton -->
          <div id="npos-loading-skeleton">
            <div class="d-none d-md-block">
              <div class="row gy-3">
                <div class="col-md-4 mb-3">
                  <div class="card p-3 gap-2">
                    <div class="skeleton" style="height: 100px; border-radius: 10px;"></div>
                    <div class="d-flex align-items-center gap-2">
                      <div class="skeleton skeleton-avatar"></div>
                      <div class="skeleton skeleton-text skeleton-text-sm"></div>
                    </div>
                    <div class="skeleton skeleton-text skeleton-text-md mb-1"></div>
                    <div class="skeleton skeleton-text skeleton-text-md"></div>
                    <div class="skeleton skeleton-button"></div>
                  </div>
                </div>
                <div class="col-md-4 mb-3">
                  <div class="card p-3 gap-2">
                    <div class="skeleton" style="height: 100px; border-radius: 10px;"></div>
                    <div class="d-flex align-items-center gap-2">
                      <div class="skeleton skeleton-avatar"></div>
                      <div class="skeleton skeleton-text skeleton-text-sm"></div>
                    </div>
                    <div class="skeleton skeleton-text skeleton-text-md mb-1"></div>
                    <div class="skeleton skeleton-text skeleton-text-md"></div>
                    <div class="skeleton skeleton-button"></div>
                  </div>
                </div>
                <div class="col-md-4 mb-3">
                  <div class="card p-3 gap-2">
                    <div class="skeleton" style="height: 100px; border-radius: 10px;"></div>
                    <div class="d-flex align-items-center gap-2">
                      <div class="skeleton skeleton-avatar"></div>
                      <div class="skeleton skeleton-text skeleton-text-sm"></div>
                    </div>
                    <div class="skeleton skeleton-text skeleton-text-md mb-1"></div>
                    <div class="skeleton skeleton-text skeleton-text-md"></div>
                    <div class="skeleton skeleton-button"></div>
                  </div>
                </div>
              </div>
            </div>
            <div class="d-block d-md-none">
              <div class="carousel slide">
                <div class="carousel-inner">
                  <div class="carousel-item active">
                    <div class="px-2">
                      <div class="card p-3 gap-2">
                        <div class="skeleton" style="height: 100px; border-radius: 10px;"></div>
                        <div class="d-flex align-items-center gap-2">
                          <div class="skeleton skeleton-avatar"></div>
                          <div class="skeleton skeleton-text skeleton-text-sm"></div>
                        </div>
                        <div class="skeleton skeleton-text skeleton-text-md mb-1"></div>
                        <div class="skeleton skeleton-text skeleton-text-md"></div>
                        <div class="skeleton skeleton-button"></div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Desktop Carousel Layout -->
          <div class="d-none d-md-block" id="npos-desktop">
            <div id="nposCarouselDesktop" class="carousel slide" data-bs-ride="false" data-bs-interval="false" data-bs-wrap="true" data-bs-touch="true">
              <div class="carousel-inner" id="npos-desktop-inner">
                <!-- NPOs will be rendered here -->
              </div>
              <button class="carousel-control-prev d-none" type="button" data-bs-target="#nposCarouselDesktop" data-bs-slide="prev" id="npos-desktop-carousel-prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
              </button>
              <button class="carousel-control-next d-none" type="button" data-bs-target="#nposCarouselDesktop" data-bs-slide="next" id="npos-desktop-carousel-next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
              </button>
            </div>
          </div>

          <!-- Mobile Carousel Layout -->
          <div class="d-block d-md-none" id="npos-mobile">
            <div id="nposCarousel" class="carousel slide" data-bs-ride="false" data-bs-interval="false" data-bs-wrap="true" data-bs-touch="true">
              <div class="carousel-inner" id="npoCards">
                <!-- NPOs will be rendered here -->
              </div>
              <button class="carousel-control-prev d-none" type="button" data-bs-target="#nposCarousel" data-bs-slide="prev" id="npos-carousel-prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
              </button>
              <button class="carousel-control-next d-none" type="button" data-bs-target="#nposCarousel" data-bs-slide="next" id="npos-carousel-next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
              </button>
              <div class="carousel-indicators d-none" id="npos-indicators">
                <!-- Indicators will be generated -->
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Share Modal -->
<!--prettier-ignore-->
{{ include /components/global/Modals/share_page_modal.html }}

<!-- Add Follow Modals Here -->
<!-- Follow Confirmation Modal -->
<div
  class="modal fade"
  id="userFollowConfirmModal"
  tabindex="-1"
  aria-hidden="true"
>
  <div class="modal-dialog modal-dialog-centered modal-sm">
    <div class="modal-content p-0">
      <div class="modal-header w-100 border-0 pb-0">
        <div class="d-flex justify-content-end w-100">
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"
          ></button>
        </div>
      </div>
      <div class="modal-body px-4 pb-4">
        <div
          class="d-flex flex-column justify-content-center align-items-center"
        >
          <img
            src="https://4xxglxlj.media.zestyio.com/finish_icon.png"
            alt=""
            class="img-fluid mb-3"
          />
          <p class="text-center fs-5 fw-medium text-muted">
            Follow {{ this.first_name }} {{ this.last_name }}?
          </p>
          <div class="d-flex gap-2 w-100 mt-3">
            <button
              type="button"
              class="btn btn-light flex-grow-1"
              data-bs-dismiss="modal"
            >
              Cancel
            </button>
            <button
              type="button"
              class="btn btn-primary flex-grow-1"
              id="confirmUserFollowBtn"
            >
              <span class="button-content">Follow</span>
              <span
                class="spinner-border spinner-border-sm d-none"
                role="status"
                aria-hidden="true"
              ></span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Already Followed Modal -->
<div
  class="modal fade"
  id="userAlreadyFollowedModal"
  tabindex="-1"
  aria-hidden="true"
>
  <div class="modal-dialog modal-dialog-centered modal-sm">
    <div class="modal-content p-0">
      <div class="modal-header w-100 border-0 pb-0">
        <div class="d-flex justify-content-end w-100">
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"
          ></button>
        </div>
      </div>
      <div class="modal-body">
        <div
          class="d-flex flex-column justify-content-center align-items-center"
        >
          <img
            src="https://4xxglxlj.media.zestyio.com/finish_icon.png"
            alt=""
            class="img-fluid mb-3"
          />
          <p class="text-center fs-5 fw-medium text-muted">
            You're already following {{ this.first_name }} {{ this.last_name }}
          </p>
          <button
            type="button"
            class="btn btn-primary w-100 mt-3"
            data-bs-dismiss="modal"
          >
            Close
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- User Follow Login Prompt Modal -->
<div
  class="modal fade"
  id="userFollowLoginPromptModal"
  tabindex="-1"
  aria-labelledby="userFollowLoginPromptModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-dialog-centered modal-sm">
    <div class="modal-content p-0">
      <div class="modal-header w-100 border-0 pb-0">
        <div class="d-flex justify-content-end w-100">
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"
          ></button>
        </div>
      </div>
      <div class="modal-body">
        <div
          class="d-flex flex-column justify-content-center align-items-center"
        >
          <img
            src="https://4xxglxlj.media.zestyio.com/Custom-Icon.png" 
            alt=""
            class="img-fluid mb-3"
          />
          <p id="userFollowLoginPromptModalLabel" class="text-center fs-5 fw-medium text-muted">
            Please Sign In to follow {{ this.first_name }} {{ this.last_name }}.
          </p>
          <button id="userFollowLoginBtn" class="btn btn-primary w-100 mt-3">
            Sign In
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script type="module">
  $(document).ready(function () {
    $(".back-btn").click(function () {
      window.history.back();
    });

    // Mobile horizontal scrolling for user-actions
    function setupUserActions() {
      if (window.innerWidth < 768) {
        // For mobile - make horizontally scrollable
        $("#user-actions").css({
          "overflow-x": "auto",
          "white-space": "nowrap",
          "-webkit-overflow-scrolling": "touch",
          "scrollbar-width": "none",
          "padding-bottom": "0.5rem",
          "justify-content": "flex-start",
          "width": "100%"
        });
        
        // Hide scrollbar
        $("#user-actions").css("-webkit-scrollbar-display", "none");
        
        // Prevent button shrinking
        $("#user-actions > .btn, #user-actions > a.btn").css("flex-shrink", "0");
      } else {
        // For desktop - restore default
        $("#user-actions").css({
          "overflow-x": "",
          "white-space": "",
          "-webkit-overflow-scrolling": "",
          "scrollbar-width": "",
          "padding-bottom": "",
          "justify-content": "flex-end",
          "width": ""
        });
        
        $("#user-actions > .btn, #user-actions > a.btn").css("flex-shrink", "");
      }
    }
    
    // Run initially and on window resize
    setupUserActions();
    $(window).resize(setupUserActions);

    // Prevent automatic scrolling on page load
    let pageLoaded = false;
    setTimeout(() => { pageLoaded = true; }, 1000);

    // Handle About tab click
    $("#about-tab").on("click", function (e) {
      e.preventDefault();
      if (pageLoaded) {
        $("html, body").animate(
          {
            scrollTop: $("#about-section").offset().top - 100, // Adjust the 100 value as needed for proper positioning
          },
          500
        );
      }
    });

    // Handle Projects tab click
    $("#projects-tab").on("click", function (e) {
      e.preventDefault();
      if (pageLoaded) {
        $("html, body").animate(
          {
            scrollTop: $("#projects-section").offset().top - 100, // Adjust the 100 value as needed for proper positioning
          },
          500
        );
      }
    });

    // Handle Stories tab click
    $("#stories-tab").on("click", function (e) {
      e.preventDefault();
      if (pageLoaded) {
        $("html, body").animate(
          {
            scrollTop: $("#stories-section").offset().top - 100, // Adjust the 100 value as needed for proper positioning
          },
          500
        );
      }
    });

    // Handle other tabs
    $("#npoTabs button:not(#about-tab)").on("click", function (e) {
      e.preventDefault();
      $(this).tab("show");
    });

    // Initialize Bootstrap tabs without triggering scroll events
    var triggerTabList = [].slice.call(
      document.querySelectorAll("#npoTabs button")
    );
    triggerTabList.forEach(function (triggerEl) {
      var tabTrigger = new bootstrap.Tab(triggerEl);
      // Only add click listener for non-about tabs to prevent auto-scroll
      if (triggerEl.id !== 'about-tab') {
        triggerEl.addEventListener("click", function (event) {
          event.preventDefault();
          tabTrigger.show();
        });
      }
    });

    const storiesRow = $("#stories-row");
    if (storiesRow.children().length === 0) {
      storiesRow.addClass("d-none");
      $("#stories-tab").addClass("d-none");
    }
  });
</script>

<script type="module">
  // Causes data will be fetched via JavaScript API

  $(document).ready(async function () {
    $(".back-btn").click(function () {
      window.history.back();
    });

      // Function to detect if a URL is a video
  function isVideoUrl(url) {
    if (!url) return false;
    const videoPatterns = [
      /vimeo\.com\/video\/\d+/i,
      /vimeo\.com\/\d+/i,
      /player\.vimeo\.com\/video\/\d+/i,
      /youtube\.com\/watch\?v=/i,
      /youtu\.be\//i,
      /\.mp4$/i,
      /\.webm$/i,
      /\.ogg$/i,
      /\.mov$/i,
      /\.avi$/i
    ];
    return videoPatterns.some(pattern => pattern.test(url));
  }

    // Function to get video embed URL
    function getVideoEmbedUrl(url) {
      if (!url) return null;
      // Check if it's already a Vimeo player URL
      if (url.includes('player.vimeo.com/video/')) {
        return url.includes('?') ? url : `${url}?autoplay=0&loop=0&muted=0`;
      }
      
          // Vimeo regular URLs - handles both /video/ID and direct /ID formats
    const vimeoMatch = url.match(/vimeo\.com\/(?:video\/)?(\d+)/i);
    if (vimeoMatch) {
      return `https://player.vimeo.com/video/${vimeoMatch[1]}?autoplay=0&loop=0&muted=0`;
    }
      
      // YouTube
      const youtubeMatch = url.match(/(?:youtube\.com\/watch\?v=|youtu\.be\/)([a-zA-Z0-9_-]+)/i);
      if (youtubeMatch) {
        return `https://www.youtube.com/embed/${youtubeMatch[1]}?autoplay=0&loop=0&muted=0`;
      }
      
      // Direct video files
      if (/\.(mp4|webm|ogg|mov|avi)$/i.test(url)) {
        return url;
      }
      
      return null;
    }

    // Function to decode HTML entities
    function decodeHtmlEntities(text) {
      if (!text) return '';
      
      // Create a temporary div element to decode HTML entities
      const tempDiv = document.createElement('div');
      tempDiv.innerHTML = text;
      return tempDiv.textContent || tempDiv.innerText || '';
    }

    // Function to extract hashtags from story text
    function extractHashtagsFromText(text) {
      if (!text) return [];
      
      // First decode HTML entities (like &#39; &#32; etc.)
      const decodedText = decodeHtmlEntities(text);
      
      // Regular expression to find hashtags (#word)
      const hashtagRegex = /#[a-zA-Z0-9_]+/g;
      const hashtags = decodedText.match(hashtagRegex);
      
      if (!hashtags || hashtags.length === 0) return [];
      
      // Remove duplicates and clean up
      const uniqueHashtags = [...new Set(hashtags.map(tag => tag.toLowerCase()))];
      
      return uniqueHashtags;
    }

    // Function to generate hashtag HTML for story cards
    function generateHashtagsHtml(storyText) {
      const hashtags = extractHashtagsFromText(storyText);
      
      if (hashtags.length === 0) return '';
      
      // Create hashtag HTML with proper links
      const hashtagsHtml = hashtags.map(hashtag => {
        const encodedHashtag = encodeURIComponent(hashtag);
        return `<a href="/stories/?search=${encodedHashtag}" class="hashtag-item" target="_blank" rel="noopener noreferrer">${hashtag}</a>`;
      }).join('');
      
      return `<div class="hashtags-container">${hashtagsHtml}</div>`;
    }

    // Function to create media element (image or video)
    function createMediaElement(mediaUrl, storyTitle) {
      if (!mediaUrl) {
        return `<img src="https://placehold.co/600x400?text=No+Image" class="story-image" alt="${storyTitle}">`;
      }

      const isVideo = isVideoUrl(mediaUrl);
      
      if (isVideo) {
        const embedUrl = getVideoEmbedUrl(mediaUrl);
        
        if (embedUrl && (embedUrl.includes('youtube.com') || embedUrl.includes('vimeo.com'))) {
          // Embedded video (YouTube/Vimeo) - show iframe with same dimensions
          return `
            <iframe 
              src="${embedUrl}" 
              class="story-image" 
              style="border: none; border-radius: 10px; object-fit: cover;" 
              frameborder="0" 
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
              allowfullscreen
              title="${storyTitle}">
            </iframe>
          `;
        } else {
          // Direct video file - show video element with same dimensions
          return `
            <video 
              class="story-image" 
              style="object-fit: cover; border-radius: 10px;" 
              controls 
              preload="metadata"
              title="${storyTitle}">
              <source src="${mediaUrl}" type="video/mp4">
              <source src="${mediaUrl}" type="video/webm">
              <source src="${mediaUrl}" type="video/ogg">
              Your browser does not support the video tag.
            </video>
          `;
        }
      }
      
      // Default to image
      return `<img src="${mediaUrl}?width=300" class="story-image" alt="${storyTitle}">`;
    }

    // Show initial skeleton loading
    const storiesRow = $("#stories-row");
    const storiesCarouselRow = $("#stories-carousel-row");
    const storiesLoadingSkeleton = $("#stories-loading-skeleton");
    const storiesLoadingSkeletonMobile = $("#stories-loading-skeleton-mobile");
    
    // Hide stories content and show skeletons
    storiesRow.addClass("d-none");
    $("#storiesCarousel").addClass("d-none");
    storiesLoadingSkeleton.removeClass("d-none");
    storiesLoadingSkeletonMobile.removeClass("d-none");

    // Function to create desktop skeleton placeholder
    function createSkeletonPlaceholder(index) {
      return `
        <div class="col-12 col-sm-6 col-md-4 skeleton-placeholder" data-skeleton-index="${index}">
          <div class="card d-flex flex-column h-100 p-3 gap-2">
            <div class="skeleton skeleton-image"></div>
            <div class="d-flex flex-column gap-2 h-100">
              <div class="d-flex align-items-end gap-2">
                <div class="skeleton skeleton-avatar"></div>
                <div class="skeleton skeleton-text skeleton-text-sm"></div>
              </div>
              <div class="flex-grow-1">
                <div class="skeleton skeleton-text skeleton-text-lg mb-2"></div>
                <div class="skeleton skeleton-text skeleton-text-md mb-1"></div>
                <div class="skeleton skeleton-text skeleton-text-md"></div>
              </div>
              <div class="d-flex align-items-center justify-content-start flex-wrap mb-2">
                <div class="skeleton skeleton-badge"></div>
              </div>
              <div class="skeleton skeleton-button"></div>
            </div>
          </div>
        </div>
      `;
    }

    // Function to create mobile carousel skeleton placeholder
    function createMobileSkeletonPlaceholder(index) {
      return `
        <div class="carousel-item ${index === 0 ? 'active' : ''} skeleton-placeholder-mobile" data-skeleton-index="${index}">
          <div class="px-3">
            <div class="card d-flex flex-column h-100 p-3 gap-2">
              <div class="skeleton skeleton-image"></div>
              <div class="d-flex flex-column gap-2 h-100">
                <div class="d-flex align-items-end gap-2">
                  <div class="skeleton skeleton-avatar"></div>
                  <div class="skeleton skeleton-text skeleton-text-sm"></div>
                </div>
                <div class="flex-grow-1">
                  <div class="skeleton skeleton-text skeleton-text-lg mb-2"></div>
                  <div class="skeleton skeleton-text skeleton-text-md mb-1"></div>
                  <div class="skeleton skeleton-text skeleton-text-md"></div>
                </div>
                <div class="d-flex align-items-center justify-content-start flex-wrap mb-2">
                  <div class="skeleton skeleton-badge"></div>
                </div>
                <div class="skeleton skeleton-button"></div>
              </div>
            </div>
          </div>
        </div>
      `;
    }

    // Function to render individual story with animation
    async function renderStoryCard(story, index, isMobile = false) {
      return new Promise((resolve) => {
        // Small delay for smoother animation
        setTimeout(() => {
          try {
            // Determine media URL - handle both string and object formats
            let mediaUrl = '';
            if (typeof story?.story_image === 'string') {
              mediaUrl = story.story_image || '';
            } else if (story?.story_image?.data && story.story_image.data.length > 0) {
              mediaUrl = story.story_image.data[0]?.url || '';
            }

            // Create media element (image or video)
            const mediaElement = createMediaElement(mediaUrl, story?.title || '');

            // Create story card content
            const storyCardContent = `
              <div class="card d-flex flex-column h-100 p-3 gap-2 story-card">
                ${mediaElement}
                <div class="d-flex flex-column gap-2 h-100">
                  <div class="d-flex align-items-end gap-2">
                    <img src="${typeof story?.author?.data[0]?.profile_image === 'string' ? story?.author?.data[0]?.profile_image : story?.author?.data[0]?.profile_image?.data[0]?.url || 'https://www.gravatar.com/avatar/?d=mp'}?width=300" class="story-npo-logo" alt="${story?.author?.data[0]?.first_name}">
                    <p class="npo-name my-auto">${story?.author?.data[0]?.first_name} ${story?.author?.data[0]?.last_name}</p>
                  </div>
                  <div class="flex-grow-1">
                    <p class="story-title">${story?.title}</p>
                    <div class="story-subtitle">${story?.story_body}</div>
                    ${generateHashtagsHtml(story?.story_body || '')}
                  </div>
                  <a href="{{ $base_url }}${story?.meta?.web?.uri}" class="btn btn-secondary story-btn card-btn">Read More</a>
                </div>
              </div>
            `;

            // Create the appropriate wrapper for desktop or mobile
            const storyCard = isMobile ? 
              `<div class="carousel-item ${index === 0 ? 'active' : ''} story-card-rendered" data-story-id="${story?.meta?.zuid}" data-story-date="${story?.meta?.createdAt}">
                <div class="px-3">${storyCardContent}</div>
              </div>` :
              `<div class="col-12 col-sm-6 col-md-4 story-card-rendered" data-story-id="${story?.meta?.zuid}" data-story-date="${story?.meta?.createdAt}">
                ${storyCardContent}
              </div>`;

            // Find and replace the corresponding skeleton
            const skeletonSelector = isMobile ? 
              `.skeleton-placeholder-mobile[data-skeleton-index="${index}"]` : 
              `.skeleton-placeholder[data-skeleton-index="${index}"]`;
            const skeletonToReplace = $(skeletonSelector);
            
            if (skeletonToReplace.length) {
              skeletonToReplace.fadeOut(200, function() {
                $(this).replaceWith(storyCard);
                resolve();
              });
            } else {
              // Fallback: append to appropriate container
              if (isMobile) {
                storiesCarouselRow.append(storyCard);
              } else {
                storiesRow.append(storyCard);
              }
              resolve();
            }
          } catch (storyError) {
            console.error(`Error processing story ${story?.meta?.zuid}:`, storyError);
            resolve(); // Continue with next story
          }
        }, index * 100); // Stagger by 100ms per story
      });
    }

    // Fetch stories data using window.getStories
    try {
      const authorZUID = "{{this.zuid}}";
      const data = await window.getStories({author: authorZUID, status: 'all'});

      if (data && data.data && data.data.length > 0) {
        $("#no-stories-message").addClass("d-none");
        $("#stories-tab").removeClass("d-none");

        // Step 1: Create skeletons matching the number of stories for both layouts
        // Desktop skeletons
        storiesLoadingSkeleton.empty();
        data.data.forEach((_, index) => {
          storiesLoadingSkeleton.append(createSkeletonPlaceholder(index));
        });

        // Mobile carousel skeletons
        const mobileSkeletonContainer = storiesLoadingSkeletonMobile.find('.carousel-inner');
        mobileSkeletonContainer.empty();
        data.data.forEach((_, index) => {
          mobileSkeletonContainer.append(createMobileSkeletonPlaceholder(index));
        });

        // Step 2: Process and render stories for both layouts
        const desktopRenderPromises = data.data.map((story, index) => renderStoryCard(story, index, false));
        const mobileRenderPromises = data.data.map((story, index) => renderStoryCard(story, index, true));
        
        // Wait for all stories to be rendered
        await Promise.all([...desktopRenderPromises, ...mobileRenderPromises]);

        // Step 3: After all stories are rendered, clean up
        setTimeout(() => {
          // Move rendered stories to their respective containers
          $('.story-card-rendered').each(function() {
            const $this = $(this);
            if ($this.hasClass('col-12')) { 
              // Desktop story card
              $this.removeClass('story-card-rendered');
              storiesRow.append(this);
            } else if ($this.hasClass('carousel-item')) { 
              // Mobile carousel story card
              $this.removeClass('story-card-rendered');
              storiesCarouselRow.append(this);
            }
          });
          
          // Show carousel controls if there are multiple stories on mobile
          if (data.data.length > 1) {
            $("#stories-carousel-prev, #stories-carousel-next").removeClass("d-none");
          }
          
          // Hide skeleton containers and show stories
          storiesLoadingSkeleton.addClass("d-none");
          storiesLoadingSkeletonMobile.addClass("d-none");
          storiesRow.removeClass("d-none");
          $("#storiesCarousel").removeClass("d-none");
          
          // Initialize Bootstrap carousel for mobile
          if (typeof bootstrap !== 'undefined') {
            const carousel = new bootstrap.Carousel(document.getElementById('storiesCarousel'), {
              interval: false,
              wrap: true,
              touch: true,
              keyboard: true
            });
          }
        }, 500);

      } else {
        // Hide skeletons and show no stories message
        storiesLoadingSkeleton.addClass("d-none");
        storiesLoadingSkeletonMobile.addClass("d-none");
        $("#stories-tab").addClass("d-none");
        storiesRow.addClass("d-none");
        $("#storiesCarousel").addClass("d-none");
        $("#no-stories-message").removeClass("d-none");
      }
    } catch (error) {
      console.error("Error fetching stories:", error);
      // Hide skeletons on error and show no stories message
      storiesLoadingSkeleton.addClass("d-none");
      storiesLoadingSkeletonMobile.addClass("d-none");
      $("#stories-tab").addClass("d-none");
      storiesRow.addClass("d-none");
      $("#storiesCarousel").addClass("d-none");
      $("#no-stories-message").removeClass("d-none");
    }
  });
</script>

<script type="module">
  $(document).ready(async function () {
    // Fetch user's favorite nonprofits with mobile optimization
    try {
      const userZUID = "{{this.zuid}}";
      const userProfile = await window.getUserProfile(userZUID);
      const data = userProfile.data[0];
      
      const favoriteNPOs = data?.favorite_npos?.data || [];
      
      if (favoriteNPOs.length === 0) {
        $('#nonprofits-tab').addClass('d-none');
        return;
      }

      // Show NPO container and loading skeleton
      $("#npos-container").show();
      $("#npos-loading-skeleton").show();

      // Function to get safe image URL
      function getNPOImageUrl(imageObj, fallback = 'https://placehold.co/600x400?text=NPO+Image') {
        if (!imageObj) return fallback;
        if (typeof imageObj === "string") return imageObj;
        if (imageObj?.data && imageObj.data[0] && imageObj.data[0]?.url) {
          return imageObj.data[0].url;
        }
        return fallback;
      }

      // Function to create NPO card
      function createNPOCard(npo) {
        const heroImage = getNPOImageUrl(npo.hero_image);
        const logoImage = getNPOImageUrl(npo.logo, 'https://www.gravatar.com/avatar/?d=mp');
        const npoUrl = `{{ $base_url }}${npo.meta?.web?.uri || '#'}`;
        
        return `
          <div class="card d-flex flex-column h-100 p-3 gap-2 npo-card" data-story-url="${npo.meta?.web?.url || '#'}">
            <img src="${heroImage}?width=300" class="npo-image" alt="${npo.name || 'NPO'}" />
            <div class="d-flex flex-column gap-2 h-100">
              <div class="d-flex flex-grow-1 align-items-center gap-2">
                <img src="${logoImage}?width=300" class="npo-npo-logo" alt="${npo.name || 'NPO'} logo" />
                <p class="npo-name my-auto">${npo.name || 'Untitled NPO'}</p>
              </div>
              <div class="npo-subtitle">${npo.cause_description || 'No description available'}</div>
              <a href="${npoUrl}" class="btn btn-secondary npo-btn card-btn">View Profile</a>
            </div>
          </div>
        `;
      }

      // Determine items per slide based on screen size
      function getItemsPerSlide() {
        const screenWidth = window.innerWidth;
        if (screenWidth >= 992) return 3; // Large screens
        if (screenWidth >= 768) return 2;  // Medium screens  
        return 1; // Mobile screens
      }

      // Function to create carousel slides with multiple items
      function createNPOCarouselSlides(npos, itemsPerSlide) {
        const slides = [];
        for (let i = 0; i < npos.length; i += itemsPerSlide) {
          const slideItems = npos.slice(i, i + itemsPerSlide);
          const isActive = i === 0 ? 'active' : '';
          
          let slideContent = `<div class="carousel-item ${isActive}"><div class="row">`;
          
          slideItems.forEach(npo => {
            const colClass = itemsPerSlide === 1 ? 'col-12' : 
                           itemsPerSlide === 2 ? 'col-6' : 'col-4';
            slideContent += `
              <div class="${colClass} mb-3">
                ${createNPOCard(npo)}
              </div>
            `;
          });
          
          slideContent += '</div></div>';
          slides.push(slideContent);
        }
        return slides;
      }

      // Render desktop carousel (up to 3 items per slide)
      const nposDesktopInner = $("#npos-desktop-inner");
      const desktopItemsPerSlide = getItemsPerSlide();
      const desktopSlides = createNPOCarouselSlides(favoriteNPOs, desktopItemsPerSlide);
      
      desktopSlides.forEach(slide => {
        nposDesktopInner.append(slide);
      });

      // Render mobile carousel (1 item per slide)
      const nposMobileInner = $("#npoCards");
      const nposIndicators = $("#npos-indicators");
      const mobileSlides = createNPOCarouselSlides(favoriteNPOs, 1);
      
      mobileSlides.forEach((slide, index) => {
        nposMobileInner.append(slide);
        
        // Create indicator for mobile
        const indicator = `
          <button type="button" data-bs-target="#nposCarousel" 
                  data-bs-slide-to="${index}" 
                  ${index === 0 ? 'class="active" aria-current="true"' : ''} 
                  aria-label="Slide ${index + 1}"></button>
        `;
        nposIndicators.append(indicator);
      });

      // Show desktop carousel controls if there are multiple slides
      if (desktopSlides.length > 1) {
        $("#npos-desktop-carousel-prev, #npos-desktop-carousel-next").removeClass("d-none");
      }
      
      // Show mobile carousel controls and indicators if there are multiple slides
      if (mobileSlides.length > 1) {
        $("#npos-carousel-prev, #npos-carousel-next").removeClass("d-none");
        $("#npos-indicators").removeClass("d-none");
      }

      // Initialize Bootstrap carousels with smooth transitions
      if (typeof bootstrap !== 'undefined') {
        // Desktop carousel
        const nposCarouselDesktop = new bootstrap.Carousel(document.getElementById('nposCarouselDesktop'), {
          interval: false,
          wrap: true,
          touch: true,
          keyboard: true
        });
        
        // Mobile carousel
        const nposCarouselMobile = new bootstrap.Carousel(document.getElementById('nposCarousel'), {
          interval: false,
          wrap: true,
          touch: true,
          keyboard: true
        });
      }

      // Hide loading skeleton and show content
      setTimeout(() => {
        $("#npos-loading-skeleton").fadeOut(300, function() {
          $("#npos-desktop, #npos-mobile").fadeIn(400);
        });
      }, 800);

    } catch (error) {
      console.error("Error fetching nonprofits:", error);
      $('#nonprofits-tab').addClass('d-none');
      $("#npos-container").hide();
    }
  });
</script>

<script type="module">
  // Render Causes with Mobile Optimization
  $(document).ready(async function() {
    try {
      const userZUID = "{{this.zuid}}";
      const favoritesCauses = "{{this.favorite_causes}}";
      
      // Check if user has favorite causes
      if (!favoritesCauses || favoritesCauses.trim() === '') {
        return; // Don't show causes section if no favorites
      }
      
      // Show causes container and loading skeleton
      $("#causes-container").show();
      $("#causes-loading-skeleton").show();
      
      // Fetch causes data
      const causesData = {
        data: [
        {{each causes as cause where find_in_set(cause.zuid, '{this.favorite_causes}')}}
        {{ cause.toJSON(2) }},
        {{ cause._arraycomma }}
        {{/each}}
        ]
      }
      
      if (!causesData || !causesData.data || causesData.data.length === 0) {
        $("#causes-container").hide();
        return;
      }
      
      // Filter causes based on favorite_causes
      const favoriteZUIDs = favoritesCauses.split(',').map(id => id.trim());
      const favoriteCauses = causesData.data.filter(cause => 
        favoriteZUIDs.includes(cause.meta?.zuid)
      );
      
      if (favoriteCauses.length === 0) {
        $("#causes-container").hide();
        return;
      }
      
      // Function to get image URL from the new format
      function getCauseImageUrl(cause) {
        if (cause.image && cause.image.data && cause.image.data.length > 0) {
          return cause.image.data[0].url;
        }
        return 'https://fakeimg.pl/600x400?text=Placeholder';
      }
      
             // Function to create cause card
       function createCauseCard(cause) {
         const imageUrl = getCauseImageUrl(cause);
         const causeUrl = `{{ $base_url }}${cause.meta?.web?.uri || '#'}`;
         
         return `
           <a href="${causeUrl}" style="text-decoration: none;" class="cause-link">
             <div class="card mb-3 text-white position-relative category-card" 
                  style="background-image: url('${imageUrl}?width=300')">
               <div class="position-absolute start-0 end-0 top-0 bottom-0 gradient-overlay"></div>
               <div class="card-body d-flex align-items-end position-relative">
                 <p class="fs-6 fw-semibold mb-0">${cause.title || 'Untitled Cause'}</p>
               </div>
             </div>
           </a>
         `;
       }
       
       // Determine items per slide based on screen size
       function getItemsPerSlide() {
         const screenWidth = window.innerWidth;
         if (screenWidth >= 992) return 3; // Large screens
         if (screenWidth >= 768) return 2;  // Medium screens  
         return 1; // Mobile screens
       }
       
       // Function to create carousel slides with multiple items
       function createCarouselSlides(causes, itemsPerSlide) {
         const slides = [];
         for (let i = 0; i < causes.length; i += itemsPerSlide) {
           const slideItems = causes.slice(i, i + itemsPerSlide);
           const isActive = i === 0 ? 'active' : '';
           
           let slideContent = `<div class="carousel-item ${isActive}"><div class="row">`;
           
           slideItems.forEach(cause => {
             const colClass = itemsPerSlide === 1 ? 'col-12' : 
                            itemsPerSlide === 2 ? 'col-6' : 'col-4';
             slideContent += `
               <div class="${colClass} mb-3">
                 ${createCauseCard(cause)}
               </div>
             `;
           });
           
           slideContent += '</div></div>';
           slides.push(slideContent);
         }
         return slides;
       }
       
       // Render desktop carousel (up to 3 items per slide)
       const causesGrid = $("#causes-grid");
       const desktopItemsPerSlide = getItemsPerSlide();
       const desktopSlides = createCarouselSlides(favoriteCauses, desktopItemsPerSlide);
       
       desktopSlides.forEach(slide => {
         causesGrid.append(slide);
       });
       
       // Render mobile carousel (1 item per slide)
       const causesCarouselInner = $("#causes-carousel-inner");
       const causesIndicators = $("#causes-indicators");
       const mobileSlides = createCarouselSlides(favoriteCauses, 1);
       
       mobileSlides.forEach((slide, index) => {
         causesCarouselInner.append(slide);
         
         // Create indicator for mobile
         const indicator = `
           <button type="button" data-bs-target="#causesCarousel" 
                   data-bs-slide-to="${index}" 
                   ${index === 0 ? 'class="active" aria-current="true"' : ''} 
                   aria-label="Slide ${index + 1}"></button>
         `;
         causesIndicators.append(indicator);
       });
       
              // Show desktop carousel controls if there are multiple slides
       if (desktopSlides.length > 1) {
         $("#causes-desktop-carousel-prev, #causes-desktop-carousel-next").removeClass("d-none");
       }
       
       // Show mobile carousel controls and indicators if there are multiple slides
       if (mobileSlides.length > 1) {
         $("#causes-carousel-prev, #causes-carousel-next").removeClass("d-none");
         $("#causes-indicators").removeClass("d-none");
       }
       
       // Initialize Bootstrap carousels with smooth transitions
       if (typeof bootstrap !== 'undefined') {
         // Desktop carousel
         const causesCarouselDesktop = new bootstrap.Carousel(document.getElementById('causesCarouselDesktop'), {
           interval: false,
           wrap: true,
           touch: true,
           keyboard: true
         });
         
         // Mobile carousel
         const causesCarouselMobile = new bootstrap.Carousel(document.getElementById('causesCarousel'), {
           interval: false,
           wrap: true,
           touch: true,
           keyboard: true
         });
       }
      
      // Hide loading skeleton and show content
      setTimeout(() => {
        $("#causes-loading-skeleton").fadeOut(300, function() {
          $("#causes-desktop, #causes-mobile").fadeIn(400);
        });
      }, 800);
      
    } catch (error) {
      console.error("Error loading causes:", error);
      $("#causes-container").hide();
    }
  });
</script>

<script type="module">
  // Follow User Logic
  $(document).ready(async function () {
    const userPageZUID = '{{this.zuid}}';
    const loggedInUserRaw = localStorage.getItem("user");
    let loggedInUser = null;
    let loggedInUserZUID = null;

    if (loggedInUserRaw) {
      try {
        loggedInUser = JSON.parse(loggedInUserRaw);
        loggedInUserZUID = loggedInUser?.zuid;
      } catch (e) {
        console.error("Error parsing loggedInUser from localStorage", e);
      }
    }

    let isFollowing = false; // Default to not following

    if (loggedInUserZUID) {
        try {
          const userProfile = await window.getUserProfile(loggedInUserZUID); // Profile of logged-in user
          const followedUsersArray = userProfile?.data?.[0]?.followed_users?.data;
          if (Array.isArray(followedUsersArray)) {
              const followedUsersZUIDs = followedUsersArray.map(user => user?.meta?.zuid).filter(id => id);
              isFollowing = followedUsersZUIDs.includes(userPageZUID);
          } else if (followedUsersArray === null || followedUsersArray === undefined) {
              // If followed_users is null/undefined, it means the user is not following anyone or the field isn't populated yet.
              isFollowing = false;
          }
           else {
              console.warn("followed_users.data is not an array or not present:", userProfile);
          }
        } catch (e) {
            console.error("Error fetching logged-in user's profile or determining follow status:", e);
        }
    }

    const followUserBtn = $("#followUserButton");
    const followUserIcon = followUserBtn.find(".follow-icon");
    const followUserText = followUserBtn.find(".follow-text");
    const followUserButtonContent = followUserBtn.find(".button-content");
    const followUserLoadingSpinner = followUserBtn.find(".loading-spinner");
    const followUserParam = new URLSearchParams(window.location.search).get("follow_user");

    function showUserFollowLoading(isLoading) {
      if (isLoading) {
        followUserButtonContent.addClass("d-none");
        followUserLoadingSpinner.removeClass("d-none");
        followUserBtn.prop("disabled", true);
      } else {
        followUserButtonContent.removeClass("d-none");
        followUserLoadingSpinner.addClass("d-none");
        followUserBtn.prop("disabled", false);
      }
    }

    function updateUserFollowButtonState(following) {
      // isFollowing = following; // Local state is updated directly after API call
      if (following) {
        followUserBtn.removeClass("btn-outline-primary").addClass("btn-primary");
        followUserIcon.removeClass("bi-plus").addClass("bi-check2");
        followUserText.text("Following");
      } else {
        followUserBtn.addClass("btn-outline-primary").removeClass("btn-primary");
        followUserIcon.addClass("bi-plus").removeClass("bi-check2");
        followUserText.text("Follow");
      }
    }

    // Initial setup
    if (loggedInUserZUID === userPageZUID) {
      followUserBtn.addClass("d-none");
    } else if (loggedInUserZUID) { // User is logged in
      followUserBtn.removeClass("d-none");
      updateUserFollowButtonState(isFollowing);

      // Handle redirect after login for follow action
      if (followUserParam && followUserParam === userPageZUID) {
        const currentUrl = new URL(window.location.href);
        currentUrl.searchParams.delete("follow_user");
        window.history.replaceState({}, document.title, currentUrl.href);

        if (isFollowing) {
          $('#userAlreadyFollowedModal').modal('show');
        } else {
          // Attempt to follow directly if redirected and not already following
          showUserFollowLoading(true);
          window.followUser(userPageZUID)
            .then(() => {
              isFollowing = true;
              updateUserFollowButtonState(true);
              // toastr.success("Successfully followed {{ this.first_name }}");
            })
            .catch(apiError => {
              console.error("Error following user after redirect:", apiError);
              // toastr.error("Failed to follow user. Please try again.");
              updateUserFollowButtonState(false); // Revert button if follow failed
            })
            .finally(() => {
              showUserFollowLoading(false);
            });
        }
      }

      // Click handler for the follow/unfollow button
      followUserBtn.off('click').on('click', async function () {
        if (!loggedInUserZUID) { // Should not happen if button is visible and not own profile
           $('#userFollowLoginPromptModal').modal('show');
           return;
        }

        showUserFollowLoading(true);
        try {
          if (isFollowing) { // Currently following, so action is to unfollow
            await window.unfollowUser(userPageZUID);
            isFollowing = false;
            updateUserFollowButtonState(false);
            // toastr.success("Unfollowed successfully");
          } else { // Currently not following, action is to follow (via confirmation modal)
            showUserFollowLoading(false); // Hide loading on main button before showing modal
            $('#userFollowConfirmModal').modal('show');
            return; // Modal's button will handle the actual follow
          }
        } catch (error) {
          console.error(`Error during ${isFollowing ? 'unfollow' : 'follow (direct click)'} action:`, error);
          // toastr.error("Action failed. Please try again.");
          // Revert button to reflect state before the failed action attempt
          updateUserFollowButtonState(isFollowing);
        } finally {
           // Only hide loading if modal isn't taking over
          if (!$('#userFollowConfirmModal').hasClass('show')) {
              showUserFollowLoading(false);
          }
        }
      });

    } else { // User is not logged in
      followUserBtn.removeClass("d-none");
      updateUserFollowButtonState(false); // Show 'Follow' state
      followUserBtn.off('click').on('click', function () {
        localStorage.setItem("followUserRedirectUrl", window.location.href + (window.location.search ? "&" : "?") + "follow_user=" + userPageZUID);
        window.location.href = '{{login_page.first().getUrl()}}';
      });
    }

    // Handle Sign In button click within the login prompt modal (this modal is less used now for follow)
    $('#userFollowLoginBtn').off('click').on('click', function () {
      localStorage.setItem("followUserRedirectUrl", window.location.href + (window.location.search ? "&" : "?") + "follow_user=" + userPageZUID);
      window.location.href = '{{login_page.first().getUrl()}}';
    });

    // Confirmation modal 'Follow' button handler
    $('#confirmUserFollowBtn').off('click').on('click', async function () {
      const confirmBtn = $(this);
      const buttonContent = confirmBtn.find('.button-content');
      const spinner = confirmBtn.find('.spinner-border');

      confirmBtn.prop('disabled', true);
      buttonContent.addClass('d-none');
      spinner.removeClass('d-none');

      try {
        await window.followUser(userPageZUID);
        isFollowing = true;
        updateUserFollowButtonState(true);
        $('#userFollowConfirmModal').modal('hide');
        // toastr.success("Successfully followed {{ this.first_name }}");
      } catch (error) {
        console.error("Error following user from modal:", error);
        // toastr.error("Failed to follow user. Please try again.");
        updateUserFollowButtonState(false); // Revert main button as follow failed
        isFollowing = false; // Revert state
      } finally {
        confirmBtn.prop('disabled', false);
        buttonContent.removeClass('d-none');
        spinner.addClass('d-none');
      }
    });
  });
</script>
